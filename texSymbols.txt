//parseMe
{
    "[]": {
      "scope": "A,D",
      "def": "index/emptySet,[index]"
    },
    "{}": {
      "scope": "D,It",
      "def": "emptySet,comprehension"
    },
    "()": {
      "scope": "X",
      "def": "priorityGrouping"
    }
    "`": {
      "scope": "D",
      "def": "key/val"
    },
    "‚àÄ":{
      "scope": "A,It",
      "def": "forall"
    },
    "Œπ": {
      "scope": "A,n",
      "def": "indexOf,nList"
    },
    "ùö§" :{
      "scope": "It",
      "def": "index"
    },
    "‚àÉ": {
      "scope": "It",
      "def": "exists"
    },
    "‚àà": {
      "scope": "A",
      "def": "in"
    },
    "‚Üí": {
      "scope": "fn,B",
      "def": "return,then"
    }, 
    "‚Üë": {
      "scope": "A,n",
      "def": "sort,take"
    }, 
    "‚Üì": {
      "scope": "A,n",
      "def": "drop"
    }, 
    "‚Üª": {
      "scope": "A,n",
      "def": "rotate"
    }, 
    "‚åä": {
      "scope": "A",
      "def": "min"
    }, 
    "‚åà": {
      "scope": "A",
      "def": "max"
    }, 
    "#": {
      "scope": "A",
      "def": "count"
    },
    ".": {
      "scope": "A",
      "def": "dotProduct"
    },
    "Œ£": {
      "scope": "A,It",
      "def": "reduce"
    }, 
    "‚Üê": {
      "scope": "Var",
      "def": "assignment"
    },
    "‚ãÉ": {
      "scope": "A",
      "def": "join"
    }, 
    "‚ãÇ": {
      "scope": "A",
      "def": "disjoint"
    },
    "‚äÇ": {
      "scope": "A",
      "def": "properSubset"
    },
    "‚äÜ": {
      "scope": "A",
      "def": "supsetOrEq"
    },
    "¬¨": {
      "scope": "A,B,N",
      "def": "reverse,not,negative"
    },
    "‚ãÅ": {
      "scope": "B",
      "def": "or"
    }, 
    "&": {
      "scope": "B",
      "def": "and"
    }, 
    "√∑": {
      "scope": "n",
      "def": "whole number division"
    }, 
    "<": {
      "scope": "N",
      "def": "lessthan"
    }, 
    ">": {
      "scope": "N",
      "def": "greaterThan"
    }, 
    "-": {
      "scope": "N",
      "def": "subtract"
    }, 
    "/": {
      "scope": "N,A",
      "def": "floating point divide,map"
    }, 
    "//": {
      "scope": "N",
      "def": "modulo"
    },
    "‚ü∑": {
      "scope": "B,fn",
      "def": "iff,continuation"
    },
    "|": {
      "scope": "fn,It,A",
      "def": "guard,returnVal"
    },
    "‚®Å": {
      "scope": "B,fn",
      "def": "xor,discontinuation"
    },
    "_":{
      "scope": "fn,A",
      "def": "curryDuringInvocation,limitVals"
    },
    "...": {
      "scope": "A,D",
      "def": "flatten,flatten"
    },
    ":"{
      "scope": "fn,lambda",
      "def": "where,where/assign"
    }
}